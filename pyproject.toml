[tool.black]
line-length = 99

[tool.mypy]
# Specify which files to check.
files = [
  "xocto",
  "tests",
  "*.py",
]

# Output.
show_error_codes = true

# Strict mode; enables the following flags: 
#   --check-untyped-defs
#   --disallow-any-generics,
#   --disallow-incomplete-defs
#   --disallow-subclassing-any 
#   --disallow-untyped-calls 
#   --disallow-untyped-decorators,
#   --disallow-untyped-defs,
#   --no-implicit-reexport
#   --strict-concatenate
#   --strict-equality
#   --warn-redundant-casts
#   --warn-return-any
#   --warn-unused-configs 
#   --warn-unused-ignores
strict = true

# These flags enabled by `strict` are ones we're overriding.
disallow_subclassing_any = false
warn_return_any = false

# Enable the following optional checks.
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
  "unused-awaitable",
]

# Warnings.
warn_unreachable = true

# Don't force test functions to include types.
[[tool.mypy.overrides]]
module = [
  "tests.*",
]
disallow_untyped_defs = false
check_untyped_defs = false

# Ignore errors from packages that don't have type annotations.
[[tool.mypy.overrides]]
module = [
  "boto3.*",
  "botocore.*",
  "django.*",
  "moto.*",
  "pact.*",
  "pandas.*",
  "setuptools.*",
  "xlrd.*",
  "zoneinfo.*",
]
ignore_missing_imports = true


# Ruff
# ----

[tool.ruff]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
]
ignore = [
    "E501",  # line too long - black takes care of this for us
]

[tool.ruff.per-file-ignores]
# Allow unused imports in __init__ files as these are convenience imports
"**/__init__.py" = [ "F401" ]

[tool.ruff.isort]
lines-after-imports = 2
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "project",
    "local-folder",
]

[tool.ruff.isort.sections]
"project" = [
    "xocto",
    "tests",
]
